# sphero learner 1D
# learner parameters
[learner]
mode = vel

tau = 0.5

g = 0.999

# sensorimotor delay
# for sphero rate = 40, loop_time = 20
# lag = 5
# for sphero rate = 20, loop_time = 20
# lag = 3
lag = 9
# for sphero rate = 10, loop_time = 10
# lag = 1

# learning exploration noise amplitude
res_theta = 2e-1
eta_EH = 3e-3

# dummy target
target = 0.4

res_input_scaling = 1.
res_feedback_scaling = 0.5
res_bias_scaling = 0.5
# find appropriate output scaling with simple covariance based gain matching
res_output_scaling = 100.

# sphero: 3 orientation, 3 ang vel, 3 linear acc, 2 pos, 2 vel
network_idim = 2
# network output dimensionality
network_odim = 1
# gives the indices of those input channels which are selected, is extendible
input_coupling_mtx = {0: 1.}

nonlin_func = np.tanh
# nonlin_func = lambda x: x

network_size = 200
# network connection density
p = 0.1
# network state noise amplitude / regularization
network_theta_state = 5e-2

# stuff
coeff_a = 0.1
# coeff_a = 0.05
use_ip = 0
use_pre = 0
pre_inputs = []
pre_delay = []
use_et = 1
et_winsize = 20
use_anneal = 1
# anneal_const = 5000.
# anneal_const = 2500.
anneal_const = 500.
# anneal_const = 300.
use_mt = 0
use_density = 0
density_mode = 0
do_savelogs = 0
pm_mass = 1.
use_wb = 1.
# experiment parameters
[experiment]
# episode length
# len_episode=500
# len_episode=3000
len_episode=5000
# len_episode=10000
len_washout = 10
ratio_testing = 0.8
tp_perturbation = {}
tp_target = {}
target_interval = 5000
