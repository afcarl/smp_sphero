# sphero learner 1D
# learner parameters
[learner]
mode = vel
# mode = bump
# mode = ramp
# mode = PIDvel
# mode = noise
# tau = 0.01
# tau = 0.05
# tau = 0.1
tau = 0.2
# tau = 0.3
# tau = 0.5
# tau = 0.7, (works), 0.4, 0.8
# tau = 0.9
# tau = 1.0
# smaller ok too?
# > 1. try that, 1.1 works very nicely, need to tune eta respectively
# all of g = {0.001, 0.01, 1.1, 1.2} works well
# g = 10
# g = 2.
# g = 1.5
# g = 1.2
# g = 1.1
g = 0.999
# g = 0.9
# g = 0.7
# g = 0.5
# g = 0.3
# g = 0.01
# g = 0.001 
# g = 0.
# sensorimotor delay
# for sphero rate = 40, loop_time = 20
# lag = 5
# for sphero rate = 20, loop_time = 20
lag = 4
# lag = 9
# for sphero rate = 10, loop_time = 10
# lag = 1

# learning exploration noise amplitude
# res_theta = 1e0
# res_theta = 5e-1
res_theta = 2e-1
# res_theta = 1e-1
# res_theta = 5e-2
# res_theta = 1e-2
# res_theta = 0.
# eta_EH = 1e-1
# eta_EH = 1e-2
# eta_EH = 8e-3
# eta_EH = 6e-3
# eta_EH = 5e-3
# eta_EH = 4e-3
# eta_EH = 3e-3
# eta_EH = 2e-3
eta_EH = 1e-3
# eta_EH = 5e-4
# eta_EH = 1e-4
# eta_EH = 0.

# dummy target
target = 0.4

res_input_scaling = 1.
res_feedback_scaling = 0.
res_bias_scaling = 0.5
# find appropriate output scaling with simple covariance based gain matching
res_output_scaling = 100.
# res_output_scaling = 6.28
# output_scaling = 4096
# output_scaling = 4200
# output_scaling = 6000.
# output_scaling = 5000.
# network input dimensionality
# sphero: 3 orientation, 3 ang vel, 3 linear acc, 2 pos, 2 vel
network_idim = 2
# network output dimensionality
network_odim = 1
# gives the indices of those input channels which are selected, is extendible
# for dim=1
input_coupling_mtx = {0: 1.}
# # for dim=2
# input_coupling_mtx = {0: 1., 1: 1., 2: 1., 3: 1.}
# input_coupling_mtx = {0: 0.1, 0: 0.1, 2: 0.1}
nonlin_func = np.tanh
# nonlin_func = lambda x: x

# new entries for updating all config files
# network size
network_size = 500
# network connection density
p = 0.1
# network state noise amplitude / regularization
# network_theta_state = 5e-2
network_theta_state = 5e-2
# network_theta_state = 1e-12
coeff_a = 0.1
# coeff_a = 0.05
use_ip = 0
use_pre = 0
pre_inputs = []
pre_delay = []
use_et = 0
et_winsize = 20
use_anneal = 1
anneal_const = 5000.
# anneal_const = 2500.
# anneal_const = 1000.
# anneal_const = 500.
# anneal_const = 250.
use_mt = 0
use_wb = 1
# for easy targets
wb_thr = 0.2
# for jumping targets
# wb_thr = 0.12
use_density = 0
density_mode = 0
do_savelogs = 0
pm_mass = 1.
# experiment parameters
[experiment]
# episode length
# len_episode=100
# len_episode=3000
# len_episode=1100
len_episode=5000
# len_episode=10000
len_washout = 10
ratio_testing = 1.
tp_perturbation = {}
tp_target = {"constant": 0, "jumping": 0, "jumping_sign": 0, "sine": 1, "sine_sign": 0, "randomwalk": 0}
target_interval = 5000
